@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.2/Chart.bundle.min.js"></script>
<style tyoe="text/css">
    .tab-content > .tab-pane {
        display: block;
        height: 0;
        overflow: hidden;
    }

        .tab-content > .tab-pane.active {
            height: auto;
        }
</style>

    <div class="col-12">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="monthly-tab" data-toggle="tab" href="#monthly" role="tab" aria-controls="monthly" aria-selected="true">Monthly</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="daily-tab" data-toggle="tab" href="#daily" role="tab" aria-controls="daily" aria-selected="false">Daily</a>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane active" id="monthly" role="tabpanel" aria-labelledby="monthly-tab">
                <div style="width:100%;height:100%">
                    <canvas id="myChart" style="padding: 0;margin: auto;display: block; "> </canvas>
                </div>
                <script>
                    $.ajax({
                        type: "GET",
                        url: "api/Event/activity/monthly",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (chData) {
                            // Split timestamp and data into separate arrays
                            var labels = [], dataT = []; dataDev = []; dataTest = []; dataProd = [];
                            chData.forEach(function (packet) {
                                labels.push(packet.s_eventDate);
                                dataT.push(packet.eventCount);
                                dataDev.push(packet.developmentCount);
                                dataTest.push(packet.testCount);
                                dataProd.push(packet.productionCount);
                            });

                            var dataT = {
                                labels: labels,
                                datasets: [{
                                    label: "Development",
                                    data: dataDev,
                                    fill: false,
                                    backgroundColor: "rgba(216,130,25, .7)",
                                    borderColor: "rgb(212,117,0)",
                                    borderWidth: 1
                                },
                                    {
                                    label: "Testing",
                                    data: dataTest,
                                    fill: false,
                                    backgroundColor: "rgba(54, 162, 235, .7)",
                                    borderColor: "rgb(54, 162, 235)",
                                    borderWidth: 1
                                }, 
                                    {
                                    label: "Production",
                                    data: dataProd,
                                    fill: false,
                                    backgroundColor: "rgba(60, 181, 33, .7)",
                                    borderColor: "rgb(60,181,33)",
                                    borderWidth: 1
                                }]
                            };

                            var ctx = $("#myChart").get(0).getContext("2d");
                            var myNewChart = new Chart(ctx, {
                                type: 'bar',
                                data: dataT,
                                options: {
                                    responsive: true,
                                    title: { display: true, text: 'DEPLOYMENT COUNT CHART' },
                                    legend: { position: 'bottom' },
                                    scales: {
                                        xAxes: [{ gridLines: { display: false }, display: true, stacked: true, scaleLabel: { display: false, labelString: '' } }],
                                        yAxes: [{ gridLines: { display: false }, display: true, stacked: true, scaleLabel: { display: false, labelString: '' }, ticks: { beginAtZero: true } }]
                                    },
                                }
                            });
                        }
                    });
                </script>
            </div>
            <div class="tab-pane " id="daily" role="tabpanel" aria-labelledby="daily-tab">
                <div style="width:100%;height:100%">
                    <canvas id="myChart2" style="padding: 0;margin: auto;display: block; "> </canvas>
                </div>

                <script>
                    /**
                    * returns an array with moving average of the input array*/
                    function movingAvg(array, count, qualifier) {

                        // calculate average for subarray
                        var avg = function (array, qualifier) {

                            var sum = 0, count = 0, val;
                            for (var i in array) {
                                val = array[i];
                                if (!qualifier || qualifier(val)) {
                                    sum += val;
                                    count++;
                                }
                            }

                            return sum / count;
                        };

                        var result = [], val;

                        // pad beginning of result with null values
                        for (var i = 0; i < count - 1; i++)
                            result.push(null);

                        // calculate average for each subarray and add to result
                        for (var i = 0, len = array.length - count; i <= len; i++) {

                            val = avg(array.slice(i, i + count), qualifier);
                            if (isNaN(val))
                                result.push(null);
                            else
                                result.push(val);
                        }

                        return result;
                    }

                    $.ajax({
                        type: "GET",
                        url: "api/Event/activity/daily",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (chData) {
                            // Split timestamp and data into separate arrays
                            var labels = [], dataT = [];
                            chData.forEach(function (packet) {
                                labels.push(packet.s_eventDate);
                                dataT.push(packet.eventCount);
                            });

                            var dataT = {
                                labels: labels,
                                datasets: [{
                                    label: "Deployment Count",
                                    data: dataT,
                                    fill: false,
                                    backgroundColor: ["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)", "rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
                                    borderColor: ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)", "rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
                                    borderWidth: 1
                                },
                                {
                                    type: "line"
                                    , label: "Moving Average"
                                    , data: movingAvg(dataT, 8, function (val) { return val != 0; })
                                }]
                            };

                            var ctx = $("#myChart2").get(0).getContext("2d");
                            var myNewChart = new Chart(ctx, {
                                type: 'line',
                                data: dataT,
                                options: {
                                    responsive: true,
                                    title: { display: true, text: 'DEPLOYMENT COUNT CHART' },
                                    legend: { position: 'bottom' },
                                    scales: {
                                        xAxes: [{ gridLines: { display: false }, display: true, autoskip: true, maxTicksLimit: 10, scaleLabel: { display: false, labelString: '' } }],
                                        yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' }, ticks: { beginAtZero: true } }]
                                    },
                                }
                            });
                        }
                    });
                </script>
            </div>

        </div>
    </div>


